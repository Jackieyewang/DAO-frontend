{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"/home/wyw/forfun/app/f/blockchain/bcui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wyw/forfun/app/f/blockchain/bcui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wyw/forfun/app/f/blockchain/bcui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wyw/forfun/app/f/blockchain/bcui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wyw/forfun/app/f/blockchain/bcui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/home/wyw/forfun/app/f/blockchain/bcui/src/routes/Register/Register.js\";\nimport React, { Component } from 'react';\nvar FormItem = _Form.Item;\nvar Option = _Select.Option;\nvar sex = [{\n  value: '男',\n  label: '男'\n}, {\n  value: '女',\n  label: '女'\n}];\n\nvar NormalRegisterForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NormalRegisterForm, _React$Component);\n\n  function NormalRegisterForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NormalRegisterForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NormalRegisterForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不相同！');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(NormalRegisterForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })(React.createElement(_Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"+86\"), React.createElement(Option, {\n        value: \"87\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"+87\")));\n      return React.createElement(_Row, {\n        type: \"flex\",\n        justify: \"center\",\n        align: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        id: \"registerForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u7535\\u5B50\\u90AE\\u7BB1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: '请输入正确的电子邮箱帐号！'\n        }, {\n          required: true,\n          message: '电子邮箱帐号不能为空！'\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: '密码不能为空！'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(_Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u91CD\\u590D\\u5BC6\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: '请再次输入密码！'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(_Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"\\u7528\\u6237\\u540D\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: '用户名不能为空！',\n          whitespace: true\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"\\u771F\\u5B9E\\u59D3\\u540D\\xA0\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), getFieldDecorator('realname', {\n        rules: [{\n          required: true,\n          message: '真实姓名不能为空！',\n          whitespace: true\n        }]\n      })(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u6027\\u522B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), getFieldDecorator('sex')(React.createElement(_Cascader, {\n        options: sex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u624B\\u673A\\u53F7\\u7801\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: '手机号码不能为空！'\n        }]\n      })(React.createElement(_Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u8EAB\\u4EFD\\u8BC1\\u53F7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), getFieldDecorator('idnumber', {\n        rules: [{\n          required: true,\n          message: '身份证号不能为空！'\n        }]\n      })(React.createElement(_Input, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u5DE5\\u4F5C\\u5355\\u4F4D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), getFieldDecorator('office')(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"\\u4E2A\\u4EBA\\u7B80\\u4ECB\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), getFieldDecorator('profile')(React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), getFieldDecorator('agreement', {\n        valuePropName: 'checked'\n      })(React.createElement(_Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"\\u6211\\u5DF2\\u9605\\u8BFB\", React.createElement(\"a\", {\n        href: \"/#/register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"\\u534F\\u8BAE\")))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"\\u6CE8\\u518C\"), React.createElement(\"a\", {\n        href: \"/#/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"\\u767B\\u5F55\")))));\n    }\n  }]);\n\n  return NormalRegisterForm;\n}(React.Component);\n\nvar WrappedNormalRegisterForm = _Form.create()(NormalRegisterForm);\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    _classCallCheck(this, Register);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Register).apply(this, arguments));\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(WrappedNormalRegisterForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport { Register as default };","map":{"version":3,"sources":["/home/wyw/forfun/app/f/blockchain/bcui/src/routes/Register/Register.js"],"names":["React","Component","FormItem","Item","Option","sex","value","label","NormalRegisterForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","rules","type","message","required","validator","whitespace","valuePropName","WrappedNormalRegisterForm","create","Register"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nconst sex = [{\n    value: '男',\n    label: '男',\n}, {\n    value: '女',\n    label: '女',\n}];\n\nclass NormalRegisterForm extends React.Component {\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    }\n    \n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n    \n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('两次输入的密码不相同！');\n        } else {\n            callback();\n        }\n    }\n    \n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n        const prefixSelector = getFieldDecorator('prefix', {\n            initialValue: '86',\n        }) (\n            <Select style={{ width: 70 }}>\n                <Option value=\"86\">+86</Option>\n                <Option value=\"87\">+87</Option>\n            </Select>\n        );\n\n        return (\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                <Col>\n                    <Form onSubmit={this.handleSubmit} id=\"registerForm\">\n                        <FormItem\n                            {...formItemLayout}\n                            label=\"电子邮箱\"\n                        >\n                            {getFieldDecorator('email', {\n                                rules: [{\n                                type: 'email', message: '请输入正确的电子邮箱帐号！',\n                                }, {\n                                required: true, message: '电子邮箱帐号不能为空！',\n                                }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayout}\n                            label=\"密码\"\n                        >\n                            {getFieldDecorator('password', {\n                                rules: [{\n                                required: true, message: '密码不能为空！',\n                                }, {\n                                validator: this.validateToNextPassword,\n                                }],\n                            })(\n                                <Input type=\"password\" />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayout}\n                            label=\"重复密码\"\n                        >\n                            {getFieldDecorator('confirm', {\n                                rules: [{\n                                required: true, message: '请再次输入密码！',\n                                }, {\n                                validator: this.compareToFirstPassword,\n                                }],\n                            })(\n                                <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayout}\n                            label={(\n                                <span>\n                                用户名&nbsp;\n                                </span>\n                            )}\n                        >\n                            {getFieldDecorator('username', {\n                                rules: [{ required: true, message: '用户名不能为空！', whitespace: true }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayout}\n                            label={(\n                                <span>\n                                真实姓名&nbsp;\n                                </span>\n                            )}\n                        >\n                            {getFieldDecorator('realname', {\n                                rules: [{ required: true, message: '真实姓名不能为空！', whitespace: true }],\n                            })(\n                                <Input />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayout}\n                            label=\"性别\"\n                        >\n                            {getFieldDecorator('sex')(\n                                <Cascader options={sex} />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayout}\n                            label=\"手机号码\"\n                        >\n                            {getFieldDecorator('phone', {\n                                rules: [{ required: true, message: '手机号码不能为空！' }],\n                            })(\n                                <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayout}\n                            label=\"身份证号\"\n                        >\n                            {getFieldDecorator('idnumber', {\n                                rules: [{ required: true, message: '身份证号不能为空！' }],\n                            })(\n                                <Input style={{ width: '100%' }} />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayout}\n                            label=\"工作单位\"\n                        >\n                            {getFieldDecorator('office')(\n                                <Input />\n                            )}\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayout}\n                            label=\"个人简介\"\n                        >\n                            {getFieldDecorator('profile')(\n                                <Input />\n                            )}\n                        </FormItem>\n                        <FormItem {...tailFormItemLayout}>\n                            {getFieldDecorator('agreement', {\n                                valuePropName: 'checked',\n                            })(\n                                <Checkbox>我已阅读<a href=\"/#/register\">协议</a></Checkbox>\n                            )}\n                        </FormItem>\n                        <FormItem {...tailFormItemLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">注册</Button>\n                            <a href='/#/login'>登录</a>\n                        </FormItem>\n                    </Form>\n                </Col>\n            </Row>\n        )\n    }\n}\n  \nconst WrappedNormalRegisterForm = Form.create()(NormalRegisterForm);\n\nexport default class Register extends Component{\n    render(){\n        return (\n            <WrappedNormalRegisterForm />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}